{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","this","goods","visibleGoods","LENGTH","sort","a","b","length","ALPABET","localeCompare","reverse","getReorderedGoods","className","type","onClick","setState","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,kFAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,4CAOE,WAAU,IAAD,OACP,EAA4CC,KAAKL,MAAzCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SACzBG,EAzCV,SACEA,EACAH,EACAD,GAGA,IAAMK,EAAY,YAAOD,GAEzB,OAAQH,GACN,KAAKN,EAASW,OACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UACzC,MACF,KAAKf,EAASgB,QACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,cAAcH,MAShD,OAJIT,GACFK,EAAaQ,UAGRR,EAmBSS,CAAkBlB,EAAiBK,EAAUD,GAE3D,OACE,sBAAKe,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,WACIhB,GACA,wBACEgB,UAAU,SACVC,KAAK,SACLC,QAAS,kBACP,EAAKC,SAAS,CAAEnB,WAAW,KAJ/B,mBAUDA,GACC,qCACE,wBACEgB,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAAS,CAAEjB,SAAUN,EAASgB,WAHpD,iCAQA,wBACEI,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAAS,CAAEjB,SAAUN,EAASW,UAHpD,4BAQA,wBACES,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAM,EAAKC,UAAS,SAAApB,GAAK,MAChC,CAAEE,YAAaF,EAAME,gBAJzB,qBAUA,wBACEe,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAAS,CAC3BlB,YAAY,EACZC,SAAUN,EAASO,QALvB,yBAcN,oBAAIa,UAAU,QAAd,SACGhB,GAAaK,EAAMe,KAAI,SAAAC,GAAI,OAC1B,oBAEEL,UAAU,cAFZ,SAIGK,GAHIA,eAtEnB,GAAyBC,IAAMC,WCrD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1dfeab88.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\n// Use this function in the render method\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  // Not to mutate the original array\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    case SortType.ALPABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    default:\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const { isStarted, isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          {!isStarted && (\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => (\n                this.setState({ isStarted: true })\n              )}\n            >\n              Start\n            </button>\n          )}\n          {isStarted && (\n            <>\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={() => this.setState({ sortType: SortType.ALPABET })}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={() => this.setState({ sortType: SortType.LENGTH })}\n              >\n                Sort by length\n              </button>\n\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={() => this.setState(state => (\n                  { isReversed: !state.isReversed }\n                ))}\n              >\n                Reverse\n              </button>\n\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={() => this.setState({\n                  isReversed: false,\n                  sortType: SortType.NONE,\n                })}\n              >\n                Reset\n              </button>\n            </>\n          )}\n        </div>\n\n        <ul className=\"Goods\">\n          {isStarted && goods.map(good => (\n            <li\n              key={good}\n              className=\"Goods__item\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}